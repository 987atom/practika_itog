<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="praktika2DataSet" targetNamespace="http://tempuri.org/praktika2DataSet.xsd" xmlns:mstns="http://tempuri.org/praktika2DataSet.xsd" xmlns="http://tempuri.org/praktika2DataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="praktika2ConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="praktika2ConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.PRAktika_itog.Properties.Settings.GlobalReference.Default.praktika2ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="animalsTableAdapter" GeneratorDataComponentClassName="animalsTableAdapter" Name="animals" UserDataComponentName="animalsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="praktika2.dbo.animals" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[animals] WHERE (([animals_id] = @Original_animals_id) AND ([namee] = @Original_namee) AND ([env_id] = @Original_env_id) AND ([type_animal_id] = @Original_type_animal_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_animals_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="animals_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_namee" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="namee" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_env_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="env_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_type_animal_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="type_animal_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[animals] ([namee], [env_id], [type_animal_id]) VALUES (@namee, @env_id, @type_animal_id);
SELECT animals_id, namee, env_id, type_animal_id FROM animals WHERE (animals_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@namee" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="namee" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@env_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="env_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@type_animal_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="type_animal_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT animals_id, namee, env_id, type_animal_id FROM dbo.animals</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[animals] SET [namee] = @namee, [env_id] = @env_id, [type_animal_id] = @type_animal_id WHERE (([animals_id] = @Original_animals_id) AND ([namee] = @Original_namee) AND ([env_id] = @Original_env_id) AND ([type_animal_id] = @Original_type_animal_id));
SELECT animals_id, namee, env_id, type_animal_id FROM animals WHERE (animals_id = @animals_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@namee" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="namee" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@env_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="env_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@type_animal_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="type_animal_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_animals_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="animals_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_namee" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="namee" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_env_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="env_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_type_animal_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="type_animal_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="animals_id" ColumnName="animals_id" DataSourceName="praktika2.dbo.animals" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@animals_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="animals_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="animals_id" DataSetColumn="animals_id" />
              <Mapping SourceColumn="namee" DataSetColumn="namee" />
              <Mapping SourceColumn="env_id" DataSetColumn="env_id" />
              <Mapping SourceColumn="type_animal_id" DataSetColumn="type_animal_id" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM animals
WHERE (animals_id = @Original_animals_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_animals_id" ColumnName="animals_id" DataSourceName="praktika2.dbo.animals" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_animals_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="animals_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[animals] ([namee], [env_id], [type_animal_id]) VALUES (@namee, @env_id, @type_animal_id);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="namee" ColumnName="namee" DataSourceName="praktika2.dbo.animals" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@namee" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="namee" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="env_id" ColumnName="env_id" DataSourceName="praktika2.dbo.animals" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@env_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="env_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="type_animal_id" ColumnName="type_animal_id" DataSourceName="praktika2.dbo.animals" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@type_animal_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="type_animal_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE animals
SET       namee = @namee, env_id = @env_id, type_animal_id = @type_animal_id
WHERE (animals_id = @Original_animals_id); </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="namee" ColumnName="namee" DataSourceName="praktika2.dbo.animals" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@namee" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="namee" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="env_id" ColumnName="env_id" DataSourceName="praktika2.dbo.animals" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@env_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="env_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="type_animal_id" ColumnName="type_animal_id" DataSourceName="praktika2.dbo.animals" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@type_animal_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="type_animal_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_animals_id" ColumnName="animals_id" DataSourceName="praktika2.dbo.animals" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_animals_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="animals_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AviaryTableAdapter" GeneratorDataComponentClassName="AviaryTableAdapter" Name="Aviary" UserDataComponentName="AviaryTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="praktika2.dbo.Aviary" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Aviary] WHERE (([aviary_id] = @Original_aviary_id) AND ((@IsNull_id_worker = 1 AND [id_worker] IS NULL) OR ([id_worker] = @Original_id_worker)) AND ((@IsNull_id_animal = 1 AND [id_animal] IS NULL) OR ([id_animal] = @Original_id_animal)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_aviary_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="aviary_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_id_worker" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_worker" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_worker" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_worker" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_id_animal" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_animal" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_animal" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_animal" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Aviary] ([id_worker], [id_animal]) VALUES (@id_worker, @id_animal);
SELECT aviary_id, id_worker, id_animal FROM Aviary WHERE (aviary_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id_worker" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_worker" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id_animal" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_animal" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT aviary_id, id_worker, id_animal FROM dbo.Aviary</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Aviary] SET [id_worker] = @id_worker, [id_animal] = @id_animal WHERE (([aviary_id] = @Original_aviary_id) AND ((@IsNull_id_worker = 1 AND [id_worker] IS NULL) OR ([id_worker] = @Original_id_worker)) AND ((@IsNull_id_animal = 1 AND [id_animal] IS NULL) OR ([id_animal] = @Original_id_animal)));
SELECT aviary_id, id_worker, id_animal FROM Aviary WHERE (aviary_id = @aviary_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id_worker" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_worker" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id_animal" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_animal" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_aviary_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="aviary_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_id_worker" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_worker" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_worker" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_worker" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_id_animal" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_animal" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_animal" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_animal" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="aviary_id" ColumnName="aviary_id" DataSourceName="praktika2.dbo.Aviary" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@aviary_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="aviary_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="aviary_id" DataSetColumn="aviary_id" />
              <Mapping SourceColumn="id_worker" DataSetColumn="id_worker" />
              <Mapping SourceColumn="id_animal" DataSetColumn="id_animal" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM Aviary
WHERE (aviary_id = @Original_aviary_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_aviary_id" ColumnName="aviary_id" DataSourceName="praktika2.dbo.Aviary" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_aviary_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="aviary_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[Aviary] ([id_worker], [id_animal]) VALUES (@id_worker, @id_animal);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="id_worker" ColumnName="id_worker" DataSourceName="praktika2.dbo.Aviary" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id_worker" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_worker" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="id_animal" ColumnName="id_animal" DataSourceName="praktika2.dbo.Aviary" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id_animal" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_animal" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE Aviary
SET       id_worker = @id_worker, id_animal = @id_animal
WHERE (aviary_id = @Original_aviary_id); </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="id_worker" ColumnName="id_worker" DataSourceName="praktika2.dbo.Aviary" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id_worker" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_worker" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="id_animal" ColumnName="id_animal" DataSourceName="praktika2.dbo.Aviary" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id_animal" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_animal" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_aviary_id" ColumnName="aviary_id" DataSourceName="praktika2.dbo.Aviary" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_aviary_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="aviary_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="benefitsTableAdapter" GeneratorDataComponentClassName="benefitsTableAdapter" Name="benefits" UserDataComponentName="benefitsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="praktika2.dbo.benefits" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[benefits] WHERE (([id_benefits] = @Original_id_benefits) AND ([discount] = @Original_discount) AND ([name_ben] = @Original_name_ben))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_benefits" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_benefits" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_discount" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="discount" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_name_ben" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name_ben" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[benefits] ([discount], [name_ben]) VALUES (@discount, @name_ben);
SELECT id_benefits, discount, name_ben FROM benefits WHERE (id_benefits = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@discount" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="discount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@name_ben" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name_ben" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id_benefits, discount, name_ben FROM dbo.benefits</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[benefits] SET [discount] = @discount, [name_ben] = @name_ben WHERE (([id_benefits] = @Original_id_benefits) AND ([discount] = @Original_discount) AND ([name_ben] = @Original_name_ben));
SELECT id_benefits, discount, name_ben FROM benefits WHERE (id_benefits = @id_benefits)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@discount" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="discount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@name_ben" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name_ben" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_benefits" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_benefits" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_discount" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="discount" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_name_ben" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name_ben" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id_benefits" ColumnName="id_benefits" DataSourceName="praktika2.dbo.benefits" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id_benefits" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_benefits" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id_benefits" DataSetColumn="id_benefits" />
              <Mapping SourceColumn="discount" DataSetColumn="discount" />
              <Mapping SourceColumn="name_ben" DataSetColumn="name_ben" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM benefits
WHERE (id_benefits = @Original_id_benefits)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_id_benefits" ColumnName="id_benefits" DataSourceName="praktika2.dbo.benefits" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_id_benefits" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_benefits" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[benefits] ([discount], [name_ben]) VALUES (@discount, @name_ben);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="discount" ColumnName="discount" DataSourceName="praktika2.dbo.benefits" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@discount" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="discount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="name_ben" ColumnName="name_ben" DataSourceName="praktika2.dbo.benefits" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@name_ben" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="name_ben" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE benefits
SET       discount = @discount, name_ben = @name_ben
WHERE (id_benefits = @Original_id_benefits); </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="discount" ColumnName="discount" DataSourceName="praktika2.dbo.benefits" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@discount" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="discount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="name_ben" ColumnName="name_ben" DataSourceName="praktika2.dbo.benefits" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@name_ben" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="name_ben" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_id_benefits" ColumnName="id_benefits" DataSourceName="praktika2.dbo.benefits" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_id_benefits" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_benefits" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="environmentTableAdapter" GeneratorDataComponentClassName="environmentTableAdapter" Name="environment" UserDataComponentName="environmentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="praktika2.dbo.environment" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[environment] WHERE (([id_environment] = @Original_id_environment) AND ((@IsNull_name_envir = 1 AND [name_envir] IS NULL) OR ([name_envir] = @Original_name_envir)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_environment" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_environment" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_name_envir" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="name_envir" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_name_envir" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name_envir" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[environment] ([name_envir]) VALUES (@name_envir);
SELECT id_environment, name_envir FROM environment WHERE (id_environment = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@name_envir" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name_envir" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id_environment, name_envir FROM dbo.environment</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[environment] SET [name_envir] = @name_envir WHERE (([id_environment] = @Original_id_environment) AND ((@IsNull_name_envir = 1 AND [name_envir] IS NULL) OR ([name_envir] = @Original_name_envir)));
SELECT id_environment, name_envir FROM environment WHERE (id_environment = @id_environment)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@name_envir" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name_envir" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_environment" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_environment" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_name_envir" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="name_envir" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_name_envir" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name_envir" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id_environment" ColumnName="id_environment" DataSourceName="praktika2.dbo.environment" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id_environment" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_environment" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id_environment" DataSetColumn="id_environment" />
              <Mapping SourceColumn="name_envir" DataSetColumn="name_envir" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM environment
WHERE (id_environment = @Original_id_environment)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_id_environment" ColumnName="id_environment" DataSourceName="praktika2.dbo.environment" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_id_environment" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_environment" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[environment] ([name_envir]) VALUES (@name_envir);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="name_envir" ColumnName="name_envir" DataSourceName="praktika2.dbo.environment" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@name_envir" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="name_envir" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE environment
SET       name_envir = @name_envir
WHERE (id_environment = @Original_id_environment); </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="name_envir" ColumnName="name_envir" DataSourceName="praktika2.dbo.environment" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@name_envir" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="name_envir" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_id_environment" ColumnName="id_environment" DataSourceName="praktika2.dbo.environment" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_id_environment" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_environment" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="postTableAdapter" GeneratorDataComponentClassName="postTableAdapter" Name="post" UserDataComponentName="postTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="praktika2.dbo.post" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[post] WHERE (([id_post] = @Original_id_post) AND ((@IsNull_post = 1 AND [post] IS NULL) OR ([post] = @Original_post)) AND ((@IsNull_salary = 1 AND [salary] IS NULL) OR ([salary] = @Original_salary)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_post" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_post" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_post" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="post" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_post" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="post" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_salary" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="salary" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_salary" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="salary" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[post] ([post], [salary]) VALUES (@post, @salary);
SELECT id_post, post, salary FROM post WHERE (id_post = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@post" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="post" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@salary" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="salary" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id_post, post, salary FROM dbo.post</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[post] SET [post] = @post, [salary] = @salary WHERE (([id_post] = @Original_id_post) AND ((@IsNull_post = 1 AND [post] IS NULL) OR ([post] = @Original_post)) AND ((@IsNull_salary = 1 AND [salary] IS NULL) OR ([salary] = @Original_salary)));
SELECT id_post, post, salary FROM post WHERE (id_post = @id_post)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@post" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="post" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@salary" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="salary" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_post" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_post" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_post" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="post" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_post" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="post" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_salary" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="salary" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_salary" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="salary" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id_post" ColumnName="id_post" DataSourceName="praktika2.dbo.post" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id_post" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_post" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id_post" DataSetColumn="id_post" />
              <Mapping SourceColumn="post" DataSetColumn="post" />
              <Mapping SourceColumn="salary" DataSetColumn="salary" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM post
WHERE (id_post = @Original_id_post)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_id_post" ColumnName="id_post" DataSourceName="praktika2.dbo.post" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_id_post" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_post" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[post] ([post], [salary]) VALUES (@post, @salary);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="post" ColumnName="post" DataSourceName="praktika2.dbo.post" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@post" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="post" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="salary" ColumnName="salary" DataSourceName="praktika2.dbo.post" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@salary" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="salary" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE post
SET       post = @post, salary = @salary
WHERE (id_post = @Original_id_post); </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="post" ColumnName="post" DataSourceName="praktika2.dbo.post" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@post" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="post" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="salary" ColumnName="salary" DataSourceName="praktika2.dbo.post" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@salary" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="salary" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_id_post" ColumnName="id_post" DataSourceName="praktika2.dbo.post" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_id_post" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_post" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="rateTableAdapter" GeneratorDataComponentClassName="rateTableAdapter" Name="rate" UserDataComponentName="rateTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="praktika2.dbo.rate" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[rate] WHERE (([id_rate] = @Original_id_rate) AND ((@IsNull_coast = 1 AND [coast] IS NULL) OR ([coast] = @Original_coast)) AND ([name_coast] = @Original_name_coast))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_rate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_rate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_coast" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="coast" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_coast" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="coast" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_name_coast" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name_coast" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[rate] ([coast], [name_coast]) VALUES (@coast, @name_coast);
SELECT id_rate, coast, name_coast FROM rate WHERE (id_rate = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@coast" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="coast" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@name_coast" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name_coast" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id_rate, coast, name_coast FROM dbo.rate</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[rate] SET [coast] = @coast, [name_coast] = @name_coast WHERE (([id_rate] = @Original_id_rate) AND ((@IsNull_coast = 1 AND [coast] IS NULL) OR ([coast] = @Original_coast)) AND ([name_coast] = @Original_name_coast));
SELECT id_rate, coast, name_coast FROM rate WHERE (id_rate = @id_rate)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@coast" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="coast" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@name_coast" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name_coast" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_rate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_rate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_coast" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="coast" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_coast" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="coast" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_name_coast" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name_coast" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id_rate" ColumnName="id_rate" DataSourceName="praktika2.dbo.rate" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id_rate" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_rate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id_rate" DataSetColumn="id_rate" />
              <Mapping SourceColumn="coast" DataSetColumn="coast" />
              <Mapping SourceColumn="name_coast" DataSetColumn="name_coast" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM rate
WHERE (id_rate = @Original_id_rate)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_id_rate" ColumnName="id_rate" DataSourceName="praktika2.dbo.rate" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_id_rate" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_rate" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[rate] ([coast], [name_coast]) VALUES (@coast, @name_coast);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="coast" ColumnName="coast" DataSourceName="praktika2.dbo.rate" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@coast" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="coast" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="name_coast" ColumnName="name_coast" DataSourceName="praktika2.dbo.rate" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@name_coast" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="name_coast" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE rate
SET       coast = @coast, name_coast = @name_coast
WHERE (id_rate = @Original_id_rate); </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="coast" ColumnName="coast" DataSourceName="praktika2.dbo.rate" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@coast" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="coast" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="name_coast" ColumnName="name_coast" DataSourceName="praktika2.dbo.rate" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@name_coast" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="name_coast" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_id_rate" ColumnName="id_rate" DataSourceName="praktika2.dbo.rate" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_id_rate" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_rate" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="tiketTableAdapter" GeneratorDataComponentClassName="tiketTableAdapter" Name="tiket" UserDataComponentName="tiketTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="praktika2.dbo.tiket" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[tiket] WHERE (([id_tiket] = @Original_id_tiket) AND ((@IsNull_rate_id = 1 AND [rate_id] IS NULL) OR ([rate_id] = @Original_rate_id)) AND ((@IsNull_benefits_id = 1 AND [benefits_id] IS NULL) OR ([benefits_id] = @Original_benefits_id)) AND ((@IsNull_datee = 1 AND [datee] IS NULL) OR ([datee] = @Original_datee)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_tiket" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_tiket" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_rate_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="rate_id" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_rate_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="rate_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_benefits_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="benefits_id" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_benefits_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="benefits_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_datee" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="datee" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_datee" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="datee" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[tiket] ([rate_id], [benefits_id], [datee]) VALUES (@rate_id, @benefits_id, @datee);
SELECT id_tiket, rate_id, benefits_id, datee FROM tiket WHERE (id_tiket = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@rate_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="rate_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@benefits_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="benefits_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@datee" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="datee" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id_tiket, rate_id, benefits_id, datee FROM dbo.tiket</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[tiket] SET [rate_id] = @rate_id, [benefits_id] = @benefits_id, [datee] = @datee WHERE (([id_tiket] = @Original_id_tiket) AND ((@IsNull_rate_id = 1 AND [rate_id] IS NULL) OR ([rate_id] = @Original_rate_id)) AND ((@IsNull_benefits_id = 1 AND [benefits_id] IS NULL) OR ([benefits_id] = @Original_benefits_id)) AND ((@IsNull_datee = 1 AND [datee] IS NULL) OR ([datee] = @Original_datee)));
SELECT id_tiket, rate_id, benefits_id, datee FROM tiket WHERE (id_tiket = @id_tiket)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@rate_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="rate_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@benefits_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="benefits_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@datee" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="datee" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_tiket" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_tiket" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_rate_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="rate_id" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_rate_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="rate_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_benefits_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="benefits_id" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_benefits_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="benefits_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_datee" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="datee" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_datee" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="datee" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id_tiket" ColumnName="id_tiket" DataSourceName="praktika2.dbo.tiket" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id_tiket" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_tiket" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id_tiket" DataSetColumn="id_tiket" />
              <Mapping SourceColumn="rate_id" DataSetColumn="rate_id" />
              <Mapping SourceColumn="benefits_id" DataSetColumn="benefits_id" />
              <Mapping SourceColumn="datee" DataSetColumn="datee" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM tiket
WHERE (id_tiket = @Original_id_tiket)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_id_tiket" ColumnName="id_tiket" DataSourceName="praktika2.dbo.tiket" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_id_tiket" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_tiket" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[tiket] ([rate_id], [benefits_id], [datee]) VALUES (@rate_id, @benefits_id, @datee);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="rate_id" ColumnName="rate_id" DataSourceName="praktika2.dbo.tiket" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@rate_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="rate_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="benefits_id" ColumnName="benefits_id" DataSourceName="praktika2.dbo.tiket" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@benefits_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="benefits_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="datee" ColumnName="datee" DataSourceName="praktika2.dbo.tiket" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@datee" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="datee" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE tiket
SET       rate_id = @rate_id, benefits_id = @benefits_id, datee = @datee
WHERE (id_tiket = @Original_id_tiket); </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="rate_id" ColumnName="rate_id" DataSourceName="praktika2.dbo.tiket" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@rate_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="rate_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="benefits_id" ColumnName="benefits_id" DataSourceName="praktika2.dbo.tiket" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@benefits_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="benefits_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="datee" ColumnName="datee" DataSourceName="praktika2.dbo.tiket" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@datee" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="datee" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_id_tiket" ColumnName="id_tiket" DataSourceName="praktika2.dbo.tiket" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_id_tiket" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_tiket" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="tillTableAdapter" GeneratorDataComponentClassName="tillTableAdapter" Name="till" UserDataComponentName="tillTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="praktika2.dbo.till" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[till] WHERE (([till_id] = @Original_till_id) AND ((@IsNull_workers_id = 1 AND [workers_id] IS NULL) OR ([workers_id] = @Original_workers_id)) AND ((@IsNull_tickets_id = 1 AND [tickets_id] IS NULL) OR ([tickets_id] = @Original_tickets_id)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_till_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="till_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_workers_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="workers_id" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_workers_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="workers_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_tickets_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tickets_id" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_tickets_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tickets_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[till] ([workers_id], [tickets_id]) VALUES (@workers_id, @tickets_id);
SELECT till_id, workers_id, tickets_id FROM till WHERE (till_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@workers_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="workers_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@tickets_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tickets_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT till_id, workers_id, tickets_id FROM dbo.till</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[till] SET [workers_id] = @workers_id, [tickets_id] = @tickets_id WHERE (([till_id] = @Original_till_id) AND ((@IsNull_workers_id = 1 AND [workers_id] IS NULL) OR ([workers_id] = @Original_workers_id)) AND ((@IsNull_tickets_id = 1 AND [tickets_id] IS NULL) OR ([tickets_id] = @Original_tickets_id)));
SELECT till_id, workers_id, tickets_id FROM till WHERE (till_id = @till_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@workers_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="workers_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@tickets_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tickets_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_till_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="till_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_workers_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="workers_id" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_workers_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="workers_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_tickets_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tickets_id" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_tickets_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tickets_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="till_id" ColumnName="till_id" DataSourceName="praktika2.dbo.till" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@till_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="till_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="till_id" DataSetColumn="till_id" />
              <Mapping SourceColumn="workers_id" DataSetColumn="workers_id" />
              <Mapping SourceColumn="tickets_id" DataSetColumn="tickets_id" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM till
WHERE (till_id = @Original_till_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_till_id" ColumnName="till_id" DataSourceName="praktika2.dbo.till" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_till_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="till_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[till] ([workers_id], [tickets_id]) VALUES (@workers_id, @tickets_id);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="workers_id" ColumnName="workers_id" DataSourceName="praktika2.dbo.till" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@workers_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="workers_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="tickets_id" ColumnName="tickets_id" DataSourceName="praktika2.dbo.till" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@tickets_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="tickets_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE till
SET       workers_id = @workers_id, tickets_id = @tickets_id
WHERE (till_id = @Original_till_id); </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="workers_id" ColumnName="workers_id" DataSourceName="praktika2.dbo.till" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@workers_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="workers_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="tickets_id" ColumnName="tickets_id" DataSourceName="praktika2.dbo.till" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@tickets_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="tickets_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_till_id" ColumnName="till_id" DataSourceName="praktika2.dbo.till" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_till_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="till_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="type_of_animalsTableAdapter" GeneratorDataComponentClassName="type_of_animalsTableAdapter" Name="type_of_animals" UserDataComponentName="type_of_animalsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="praktika2.dbo.type_of_animals" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[type_of_animals] WHERE (([id_type_of_animals] = @Original_id_type_of_animals) AND ([name_type] = @Original_name_type))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_type_of_animals" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_type_of_animals" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_name_type" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name_type" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[type_of_animals] ([name_type]) VALUES (@name_type);
SELECT id_type_of_animals, name_type FROM type_of_animals WHERE (id_type_of_animals = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@name_type" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name_type" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id_type_of_animals, name_type FROM dbo.type_of_animals</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[type_of_animals] SET [name_type] = @name_type WHERE (([id_type_of_animals] = @Original_id_type_of_animals) AND ([name_type] = @Original_name_type));
SELECT id_type_of_animals, name_type FROM type_of_animals WHERE (id_type_of_animals = @id_type_of_animals)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@name_type" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name_type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_type_of_animals" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_type_of_animals" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_name_type" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name_type" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id_type_of_animals" ColumnName="id_type_of_animals" DataSourceName="praktika2.dbo.type_of_animals" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id_type_of_animals" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_type_of_animals" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id_type_of_animals" DataSetColumn="id_type_of_animals" />
              <Mapping SourceColumn="name_type" DataSetColumn="name_type" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM type_of_animals
WHERE (id_type_of_animals = @Original_id_type_of_animals)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_id_type_of_animals" ColumnName="id_type_of_animals" DataSourceName="praktika2.dbo.type_of_animals" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_id_type_of_animals" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_type_of_animals" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[type_of_animals] ([name_type]) VALUES (@name_type);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="name_type" ColumnName="name_type" DataSourceName="praktika2.dbo.type_of_animals" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@name_type" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="name_type" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE type_of_animals
SET       name_type = @name_type
WHERE (id_type_of_animals = @Original_id_type_of_animals); </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="name_type" ColumnName="name_type" DataSourceName="praktika2.dbo.type_of_animals" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@name_type" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="name_type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_id_type_of_animals" ColumnName="id_type_of_animals" DataSourceName="praktika2.dbo.type_of_animals" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_id_type_of_animals" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_type_of_animals" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="usersTableAdapter" GeneratorDataComponentClassName="usersTableAdapter" Name="users" UserDataComponentName="usersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="praktika2.dbo.users" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[users] WHERE (([id_users] = @Original_id_users) AND ([loginn] = @Original_loginn) AND ([passwordd] = @Original_passwordd) AND ([rol] = @Original_rol))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_users" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_users" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_loginn" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="loginn" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_passwordd" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="passwordd" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_rol" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="rol" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[users] ([loginn], [passwordd], [rol]) VALUES (@loginn, @passwordd, @rol);
SELECT id_users, loginn, passwordd, rol FROM users WHERE (id_users = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@loginn" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="loginn" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@passwordd" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="passwordd" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@rol" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="rol" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id_users, loginn, passwordd, rol FROM dbo.users</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[users] SET [loginn] = @loginn, [passwordd] = @passwordd, [rol] = @rol WHERE (([id_users] = @Original_id_users) AND ([loginn] = @Original_loginn) AND ([passwordd] = @Original_passwordd) AND ([rol] = @Original_rol));
SELECT id_users, loginn, passwordd, rol FROM users WHERE (id_users = @id_users)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@loginn" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="loginn" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@passwordd" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="passwordd" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@rol" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="rol" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_users" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_users" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_loginn" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="loginn" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_passwordd" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="passwordd" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_rol" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="rol" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id_users" ColumnName="id_users" DataSourceName="praktika2.dbo.users" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id_users" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_users" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id_users" DataSetColumn="id_users" />
              <Mapping SourceColumn="loginn" DataSetColumn="loginn" />
              <Mapping SourceColumn="passwordd" DataSetColumn="passwordd" />
              <Mapping SourceColumn="rol" DataSetColumn="rol" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM users
WHERE (id_users = @Original_id_users)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_id_users" ColumnName="id_users" DataSourceName="praktika2.dbo.users" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_id_users" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_users" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[users] ([loginn], [passwordd], [rol]) VALUES (@loginn, @passwordd, @rol);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="loginn" ColumnName="loginn" DataSourceName="praktika2.dbo.users" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@loginn" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="loginn" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="passwordd" ColumnName="passwordd" DataSourceName="praktika2.dbo.users" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@passwordd" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="passwordd" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="rol" ColumnName="rol" DataSourceName="praktika2.dbo.users" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@rol" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="rol" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE users
SET       loginn = @loginn, passwordd = @passwordd, rol = @rol
WHERE (id_users = @Original_id_users); </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="loginn" ColumnName="loginn" DataSourceName="praktika2.dbo.users" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@loginn" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="loginn" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="passwordd" ColumnName="passwordd" DataSourceName="praktika2.dbo.users" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@passwordd" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="passwordd" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="rol" ColumnName="rol" DataSourceName="praktika2.dbo.users" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@rol" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="rol" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_id_users" ColumnName="id_users" DataSourceName="praktika2.dbo.users" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_id_users" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_users" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="workersTableAdapter" GeneratorDataComponentClassName="workersTableAdapter" Name="workers" UserDataComponentName="workersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="praktika2.dbo.workers" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[workers] WHERE (([workers_id] = @Original_workers_id) AND ((@IsNull_id_post = 1 AND [id_post] IS NULL) OR ([id_post] = @Original_id_post)) AND ([surname] = @Original_surname) AND ([namee] = @Original_namee) AND ([patronymic] = @Original_patronymic) AND ((@IsNull_users = 1 AND [users] IS NULL) OR ([users] = @Original_users)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_workers_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="workers_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_id_post" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_post" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_post" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_post" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_surname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="surname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_namee" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="namee" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_patronymic" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="patronymic" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_users" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="users" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_users" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="users" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[workers] ([id_post], [surname], [namee], [patronymic], [users]) VALUES (@id_post, @surname, @namee, @patronymic, @users);
SELECT workers_id, id_post, surname, namee, patronymic, users FROM workers WHERE (workers_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id_post" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_post" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@surname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="surname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@namee" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="namee" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@patronymic" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="patronymic" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@users" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="users" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT workers_id, id_post, surname, namee, patronymic, users FROM dbo.workers</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[workers] SET [id_post] = @id_post, [surname] = @surname, [namee] = @namee, [patronymic] = @patronymic, [users] = @users WHERE (([workers_id] = @Original_workers_id) AND ((@IsNull_id_post = 1 AND [id_post] IS NULL) OR ([id_post] = @Original_id_post)) AND ([surname] = @Original_surname) AND ([namee] = @Original_namee) AND ([patronymic] = @Original_patronymic) AND ((@IsNull_users = 1 AND [users] IS NULL) OR ([users] = @Original_users)));
SELECT workers_id, id_post, surname, namee, patronymic, users FROM workers WHERE (workers_id = @workers_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id_post" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_post" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@surname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="surname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@namee" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="namee" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@patronymic" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="patronymic" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@users" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="users" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_workers_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="workers_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_id_post" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_post" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_post" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_post" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_surname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="surname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_namee" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="namee" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_patronymic" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="patronymic" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_users" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="users" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_users" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="users" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="workers_id" ColumnName="workers_id" DataSourceName="praktika2.dbo.workers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@workers_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="workers_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="workers_id" DataSetColumn="workers_id" />
              <Mapping SourceColumn="id_post" DataSetColumn="id_post" />
              <Mapping SourceColumn="surname" DataSetColumn="surname" />
              <Mapping SourceColumn="namee" DataSetColumn="namee" />
              <Mapping SourceColumn="patronymic" DataSetColumn="patronymic" />
              <Mapping SourceColumn="users" DataSetColumn="users" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM workers
WHERE (workers_id = @Original_workers_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_workers_id" ColumnName="workers_id" DataSourceName="praktika2.dbo.workers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_workers_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="workers_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[workers] ([id_post], [surname], [namee], [patronymic], [users]) VALUES (@id_post, @surname, @namee, @patronymic, @users);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="id_post" ColumnName="id_post" DataSourceName="praktika2.dbo.workers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id_post" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_post" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="surname" ColumnName="surname" DataSourceName="praktika2.dbo.workers" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@surname" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="surname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="namee" ColumnName="namee" DataSourceName="praktika2.dbo.workers" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@namee" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="namee" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="patronymic" ColumnName="patronymic" DataSourceName="praktika2.dbo.workers" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@patronymic" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="patronymic" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="users" ColumnName="users" DataSourceName="praktika2.dbo.workers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@users" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="users" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="praktika2ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE workers
SET       id_post = @id_post, surname = @surname, namee = @namee, patronymic = @patronymic, users = @users
WHERE (workers_id = @Original_workers_id); </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="id_post" ColumnName="id_post" DataSourceName="praktika2.dbo.workers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id_post" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_post" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="surname" ColumnName="surname" DataSourceName="praktika2.dbo.workers" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@surname" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="surname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="namee" ColumnName="namee" DataSourceName="praktika2.dbo.workers" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@namee" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="namee" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="patronymic" ColumnName="patronymic" DataSourceName="praktika2.dbo.workers" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@patronymic" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="patronymic" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="users" ColumnName="users" DataSourceName="praktika2.dbo.workers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@users" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="users" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_workers_id" ColumnName="workers_id" DataSourceName="praktika2.dbo.workers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_workers_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="workers_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="praktika2DataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="praktika2DataSet" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="praktika2DataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="animals" msprop:Generator_RowClassName="animalsRow" msprop:Generator_RowEvHandlerName="animalsRowChangeEventHandler" msprop:Generator_RowDeletedName="animalsRowDeleted" msprop:Generator_RowDeletingName="animalsRowDeleting" msprop:Generator_RowEvArgName="animalsRowChangeEvent" msprop:Generator_TablePropName="animals" msprop:Generator_RowChangedName="animalsRowChanged" msprop:Generator_UserTableName="animals" msprop:Generator_RowChangingName="animalsRowChanging" msprop:Generator_TableClassName="animalsDataTable" msprop:Generator_TableVarName="tableanimals">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="animals_id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="animals_id" msprop:Generator_ColumnPropNameInTable="animals_idColumn" msprop:Generator_ColumnPropNameInRow="animals_id" msprop:Generator_ColumnVarNameInTable="columnanimals_id" type="xs:int" />
              <xs:element name="namee" msprop:Generator_UserColumnName="namee" msprop:Generator_ColumnPropNameInTable="nameeColumn" msprop:Generator_ColumnPropNameInRow="namee" msprop:Generator_ColumnVarNameInTable="columnnamee">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="env_id" msprop:Generator_UserColumnName="env_id" msprop:Generator_ColumnPropNameInTable="env_idColumn" msprop:Generator_ColumnPropNameInRow="env_id" msprop:Generator_ColumnVarNameInTable="columnenv_id" type="xs:int" />
              <xs:element name="type_animal_id" msprop:Generator_UserColumnName="type_animal_id" msprop:Generator_ColumnPropNameInTable="type_animal_idColumn" msprop:Generator_ColumnPropNameInRow="type_animal_id" msprop:Generator_ColumnVarNameInTable="columntype_animal_id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Aviary" msprop:Generator_RowClassName="AviaryRow" msprop:Generator_RowEvHandlerName="AviaryRowChangeEventHandler" msprop:Generator_RowDeletedName="AviaryRowDeleted" msprop:Generator_RowDeletingName="AviaryRowDeleting" msprop:Generator_RowEvArgName="AviaryRowChangeEvent" msprop:Generator_TablePropName="Aviary" msprop:Generator_RowChangedName="AviaryRowChanged" msprop:Generator_UserTableName="Aviary" msprop:Generator_RowChangingName="AviaryRowChanging" msprop:Generator_TableClassName="AviaryDataTable" msprop:Generator_TableVarName="tableAviary">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="aviary_id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="aviary_id" msprop:Generator_ColumnPropNameInTable="aviary_idColumn" msprop:Generator_ColumnPropNameInRow="aviary_id" msprop:Generator_ColumnVarNameInTable="columnaviary_id" type="xs:int" />
              <xs:element name="id_worker" msprop:Generator_UserColumnName="id_worker" msprop:Generator_ColumnPropNameInTable="id_workerColumn" msprop:Generator_ColumnPropNameInRow="id_worker" msprop:Generator_ColumnVarNameInTable="columnid_worker" type="xs:int" minOccurs="0" />
              <xs:element name="id_animal" msprop:Generator_UserColumnName="id_animal" msprop:Generator_ColumnPropNameInTable="id_animalColumn" msprop:Generator_ColumnPropNameInRow="id_animal" msprop:Generator_ColumnVarNameInTable="columnid_animal" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="benefits" msprop:Generator_RowClassName="benefitsRow" msprop:Generator_RowEvHandlerName="benefitsRowChangeEventHandler" msprop:Generator_RowDeletedName="benefitsRowDeleted" msprop:Generator_RowDeletingName="benefitsRowDeleting" msprop:Generator_RowEvArgName="benefitsRowChangeEvent" msprop:Generator_TablePropName="benefits" msprop:Generator_RowChangedName="benefitsRowChanged" msprop:Generator_UserTableName="benefits" msprop:Generator_RowChangingName="benefitsRowChanging" msprop:Generator_TableClassName="benefitsDataTable" msprop:Generator_TableVarName="tablebenefits">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id_benefits" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="id_benefits" msprop:Generator_ColumnPropNameInTable="id_benefitsColumn" msprop:Generator_ColumnPropNameInRow="id_benefits" msprop:Generator_ColumnVarNameInTable="columnid_benefits" type="xs:int" />
              <xs:element name="discount" msprop:Generator_UserColumnName="discount" msprop:Generator_ColumnPropNameInTable="discountColumn" msprop:Generator_ColumnPropNameInRow="discount" msprop:Generator_ColumnVarNameInTable="columndiscount">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="name_ben" msprop:Generator_UserColumnName="name_ben" msprop:Generator_ColumnPropNameInTable="name_benColumn" msprop:Generator_ColumnPropNameInRow="name_ben" msprop:Generator_ColumnVarNameInTable="columnname_ben">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="environment" msprop:Generator_RowClassName="environmentRow" msprop:Generator_RowEvHandlerName="environmentRowChangeEventHandler" msprop:Generator_RowDeletedName="environmentRowDeleted" msprop:Generator_RowDeletingName="environmentRowDeleting" msprop:Generator_RowEvArgName="environmentRowChangeEvent" msprop:Generator_TablePropName="environment" msprop:Generator_RowChangedName="environmentRowChanged" msprop:Generator_UserTableName="environment" msprop:Generator_RowChangingName="environmentRowChanging" msprop:Generator_TableClassName="environmentDataTable" msprop:Generator_TableVarName="tableenvironment">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id_environment" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="id_environment" msprop:Generator_ColumnPropNameInTable="id_environmentColumn" msprop:Generator_ColumnPropNameInRow="id_environment" msprop:Generator_ColumnVarNameInTable="columnid_environment" type="xs:int" />
              <xs:element name="name_envir" msprop:Generator_UserColumnName="name_envir" msprop:Generator_ColumnPropNameInTable="name_envirColumn" msprop:Generator_ColumnPropNameInRow="name_envir" msprop:Generator_ColumnVarNameInTable="columnname_envir" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="post" msprop:Generator_RowClassName="postRow" msprop:Generator_RowEvHandlerName="postRowChangeEventHandler" msprop:Generator_RowDeletedName="postRowDeleted" msprop:Generator_RowDeletingName="postRowDeleting" msprop:Generator_RowEvArgName="postRowChangeEvent" msprop:Generator_TablePropName="post" msprop:Generator_RowChangedName="postRowChanged" msprop:Generator_UserTableName="post" msprop:Generator_RowChangingName="postRowChanging" msprop:Generator_TableClassName="postDataTable" msprop:Generator_TableVarName="tablepost">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id_post" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="id_post" msprop:Generator_ColumnPropNameInTable="id_postColumn" msprop:Generator_ColumnPropNameInRow="id_post" msprop:Generator_ColumnVarNameInTable="columnid_post" type="xs:int" />
              <xs:element name="post" msprop:Generator_UserColumnName="post" msprop:Generator_ColumnPropNameInTable="postColumn" msprop:Generator_ColumnPropNameInRow="post" msprop:Generator_ColumnVarNameInTable="columnpost" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="salary" msprop:Generator_UserColumnName="salary" msprop:Generator_ColumnPropNameInTable="salaryColumn" msprop:Generator_ColumnPropNameInRow="salary" msprop:Generator_ColumnVarNameInTable="columnsalary" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="rate" msprop:Generator_RowClassName="rateRow" msprop:Generator_RowEvHandlerName="rateRowChangeEventHandler" msprop:Generator_RowDeletedName="rateRowDeleted" msprop:Generator_RowDeletingName="rateRowDeleting" msprop:Generator_RowEvArgName="rateRowChangeEvent" msprop:Generator_TablePropName="rate" msprop:Generator_RowChangedName="rateRowChanged" msprop:Generator_UserTableName="rate" msprop:Generator_RowChangingName="rateRowChanging" msprop:Generator_TableClassName="rateDataTable" msprop:Generator_TableVarName="tablerate">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id_rate" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="id_rate" msprop:Generator_ColumnPropNameInTable="id_rateColumn" msprop:Generator_ColumnPropNameInRow="id_rate" msprop:Generator_ColumnVarNameInTable="columnid_rate" type="xs:int" />
              <xs:element name="coast" msprop:Generator_UserColumnName="coast" msprop:Generator_ColumnPropNameInTable="coastColumn" msprop:Generator_ColumnPropNameInRow="coast" msprop:Generator_ColumnVarNameInTable="columncoast" type="xs:int" minOccurs="0" />
              <xs:element name="name_coast" msprop:Generator_UserColumnName="name_coast" msprop:Generator_ColumnPropNameInTable="name_coastColumn" msprop:Generator_ColumnPropNameInRow="name_coast" msprop:Generator_ColumnVarNameInTable="columnname_coast">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="tiket" msprop:Generator_RowClassName="tiketRow" msprop:Generator_RowEvHandlerName="tiketRowChangeEventHandler" msprop:Generator_RowDeletedName="tiketRowDeleted" msprop:Generator_RowDeletingName="tiketRowDeleting" msprop:Generator_RowEvArgName="tiketRowChangeEvent" msprop:Generator_TablePropName="tiket" msprop:Generator_RowChangedName="tiketRowChanged" msprop:Generator_UserTableName="tiket" msprop:Generator_RowChangingName="tiketRowChanging" msprop:Generator_TableClassName="tiketDataTable" msprop:Generator_TableVarName="tabletiket">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id_tiket" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="id_tiket" msprop:Generator_ColumnPropNameInTable="id_tiketColumn" msprop:Generator_ColumnPropNameInRow="id_tiket" msprop:Generator_ColumnVarNameInTable="columnid_tiket" type="xs:int" />
              <xs:element name="rate_id" msprop:Generator_UserColumnName="rate_id" msprop:Generator_ColumnPropNameInTable="rate_idColumn" msprop:Generator_ColumnPropNameInRow="rate_id" msprop:Generator_ColumnVarNameInTable="columnrate_id" type="xs:int" minOccurs="0" />
              <xs:element name="benefits_id" msprop:Generator_UserColumnName="benefits_id" msprop:Generator_ColumnPropNameInTable="benefits_idColumn" msprop:Generator_ColumnPropNameInRow="benefits_id" msprop:Generator_ColumnVarNameInTable="columnbenefits_id" type="xs:int" minOccurs="0" />
              <xs:element name="datee" msprop:Generator_UserColumnName="datee" msprop:Generator_ColumnPropNameInTable="dateeColumn" msprop:Generator_ColumnPropNameInRow="datee" msprop:Generator_ColumnVarNameInTable="columndatee" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="till" msprop:Generator_RowClassName="tillRow" msprop:Generator_RowEvHandlerName="tillRowChangeEventHandler" msprop:Generator_RowDeletedName="tillRowDeleted" msprop:Generator_RowDeletingName="tillRowDeleting" msprop:Generator_RowEvArgName="tillRowChangeEvent" msprop:Generator_TablePropName="till" msprop:Generator_RowChangedName="tillRowChanged" msprop:Generator_UserTableName="till" msprop:Generator_RowChangingName="tillRowChanging" msprop:Generator_TableClassName="tillDataTable" msprop:Generator_TableVarName="tabletill">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="till_id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="till_id" msprop:Generator_ColumnPropNameInTable="till_idColumn" msprop:Generator_ColumnPropNameInRow="till_id" msprop:Generator_ColumnVarNameInTable="columntill_id" type="xs:int" />
              <xs:element name="workers_id" msprop:Generator_UserColumnName="workers_id" msprop:Generator_ColumnPropNameInTable="workers_idColumn" msprop:Generator_ColumnPropNameInRow="workers_id" msprop:Generator_ColumnVarNameInTable="columnworkers_id" type="xs:int" minOccurs="0" />
              <xs:element name="tickets_id" msprop:Generator_UserColumnName="tickets_id" msprop:Generator_ColumnPropNameInTable="tickets_idColumn" msprop:Generator_ColumnPropNameInRow="tickets_id" msprop:Generator_ColumnVarNameInTable="columntickets_id" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="type_of_animals" msprop:Generator_RowClassName="type_of_animalsRow" msprop:Generator_RowEvHandlerName="type_of_animalsRowChangeEventHandler" msprop:Generator_RowDeletedName="type_of_animalsRowDeleted" msprop:Generator_RowDeletingName="type_of_animalsRowDeleting" msprop:Generator_RowEvArgName="type_of_animalsRowChangeEvent" msprop:Generator_TablePropName="type_of_animals" msprop:Generator_RowChangedName="type_of_animalsRowChanged" msprop:Generator_UserTableName="type_of_animals" msprop:Generator_RowChangingName="type_of_animalsRowChanging" msprop:Generator_TableClassName="type_of_animalsDataTable" msprop:Generator_TableVarName="tabletype_of_animals">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id_type_of_animals" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="id_type_of_animals" msprop:Generator_ColumnPropNameInTable="id_type_of_animalsColumn" msprop:Generator_ColumnPropNameInRow="id_type_of_animals" msprop:Generator_ColumnVarNameInTable="columnid_type_of_animals" type="xs:int" />
              <xs:element name="name_type" msprop:Generator_UserColumnName="name_type" msprop:Generator_ColumnPropNameInTable="name_typeColumn" msprop:Generator_ColumnPropNameInRow="name_type" msprop:Generator_ColumnVarNameInTable="columnname_type">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="users" msprop:Generator_RowClassName="usersRow" msprop:Generator_RowEvHandlerName="usersRowChangeEventHandler" msprop:Generator_RowDeletedName="usersRowDeleted" msprop:Generator_RowDeletingName="usersRowDeleting" msprop:Generator_RowEvArgName="usersRowChangeEvent" msprop:Generator_TablePropName="users" msprop:Generator_RowChangedName="usersRowChanged" msprop:Generator_UserTableName="users" msprop:Generator_RowChangingName="usersRowChanging" msprop:Generator_TableClassName="usersDataTable" msprop:Generator_TableVarName="tableusers">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id_users" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="id_users" msprop:Generator_ColumnPropNameInTable="id_usersColumn" msprop:Generator_ColumnPropNameInRow="id_users" msprop:Generator_ColumnVarNameInTable="columnid_users" type="xs:int" />
              <xs:element name="loginn" msprop:Generator_UserColumnName="loginn" msprop:Generator_ColumnPropNameInTable="loginnColumn" msprop:Generator_ColumnPropNameInRow="loginn" msprop:Generator_ColumnVarNameInTable="columnloginn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="passwordd" msprop:Generator_UserColumnName="passwordd" msprop:Generator_ColumnPropNameInTable="passworddColumn" msprop:Generator_ColumnPropNameInRow="passwordd" msprop:Generator_ColumnVarNameInTable="columnpasswordd">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="rol" msprop:Generator_UserColumnName="rol" msprop:Generator_ColumnPropNameInTable="rolColumn" msprop:Generator_ColumnPropNameInRow="rol" msprop:Generator_ColumnVarNameInTable="columnrol">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="workers" msprop:Generator_RowClassName="workersRow" msprop:Generator_RowEvHandlerName="workersRowChangeEventHandler" msprop:Generator_RowDeletedName="workersRowDeleted" msprop:Generator_RowDeletingName="workersRowDeleting" msprop:Generator_RowEvArgName="workersRowChangeEvent" msprop:Generator_TablePropName="workers" msprop:Generator_RowChangedName="workersRowChanged" msprop:Generator_UserTableName="workers" msprop:Generator_RowChangingName="workersRowChanging" msprop:Generator_TableClassName="workersDataTable" msprop:Generator_TableVarName="tableworkers">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="workers_id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="workers_id" msprop:Generator_ColumnPropNameInTable="workers_idColumn" msprop:Generator_ColumnPropNameInRow="workers_id" msprop:Generator_ColumnVarNameInTable="columnworkers_id" type="xs:int" />
              <xs:element name="id_post" msprop:Generator_UserColumnName="id_post" msprop:Generator_ColumnPropNameInTable="id_postColumn" msprop:Generator_ColumnPropNameInRow="id_post" msprop:Generator_ColumnVarNameInTable="columnid_post" type="xs:int" minOccurs="0" />
              <xs:element name="surname" msprop:Generator_UserColumnName="surname" msprop:Generator_ColumnPropNameInTable="surnameColumn" msprop:Generator_ColumnPropNameInRow="surname" msprop:Generator_ColumnVarNameInTable="columnsurname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="namee" msprop:Generator_UserColumnName="namee" msprop:Generator_ColumnPropNameInTable="nameeColumn" msprop:Generator_ColumnPropNameInRow="namee" msprop:Generator_ColumnVarNameInTable="columnnamee">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="patronymic" msprop:Generator_UserColumnName="patronymic" msprop:Generator_ColumnPropNameInTable="patronymicColumn" msprop:Generator_ColumnPropNameInRow="patronymic" msprop:Generator_ColumnVarNameInTable="columnpatronymic">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="users" msprop:Generator_UserColumnName="users" msprop:Generator_ColumnPropNameInTable="usersColumn" msprop:Generator_ColumnPropNameInRow="users" msprop:Generator_ColumnVarNameInTable="columnusers" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:animals" />
      <xs:field xpath="mstns:animals_id" />
    </xs:unique>
    <xs:unique name="Aviary_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Aviary" />
      <xs:field xpath="mstns:aviary_id" />
    </xs:unique>
    <xs:unique name="benefits_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:benefits" />
      <xs:field xpath="mstns:id_benefits" />
    </xs:unique>
    <xs:unique name="environment_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:environment" />
      <xs:field xpath="mstns:id_environment" />
    </xs:unique>
    <xs:unique name="post_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:post" />
      <xs:field xpath="mstns:id_post" />
    </xs:unique>
    <xs:unique name="rate_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:rate" />
      <xs:field xpath="mstns:id_rate" />
    </xs:unique>
    <xs:unique name="tiket_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tiket" />
      <xs:field xpath="mstns:id_tiket" />
    </xs:unique>
    <xs:unique name="till_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:till" />
      <xs:field xpath="mstns:till_id" />
    </xs:unique>
    <xs:unique name="type_of_animals_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:type_of_animals" />
      <xs:field xpath="mstns:id_type_of_animals" />
    </xs:unique>
    <xs:unique name="users_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:users" />
      <xs:field xpath="mstns:id_users" />
    </xs:unique>
    <xs:unique name="workers_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:workers" />
      <xs:field xpath="mstns:workers_id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK__animals__env_id__373B3228" msdata:parent="environment" msdata:child="animals" msdata:parentkey="id_environment" msdata:childkey="env_id" msprop:Generator_UserParentTable="environment" msprop:Generator_UserChildTable="animals" msprop:Generator_RelationVarName="relationFK__animals__env_id__373B3228" msprop:Generator_ChildPropName="GetanimalsRows" msprop:Generator_ParentPropName="environmentRow" msprop:Generator_UserRelationName="FK__animals__env_id__373B3228" />
      <msdata:Relationship name="FK__animals__type_an__382F5661" msdata:parent="type_of_animals" msdata:child="animals" msdata:parentkey="id_type_of_animals" msdata:childkey="type_animal_id" msprop:Generator_UserParentTable="type_of_animals" msprop:Generator_UserChildTable="animals" msprop:Generator_RelationVarName="relationFK__animals__type_an__382F5661" msprop:Generator_ChildPropName="GetanimalsRows" msprop:Generator_ParentPropName="type_of_animalsRow" msprop:Generator_UserRelationName="FK__animals__type_an__382F5661" />
      <msdata:Relationship name="FK__Aviary__id_anima__43A1090D" msdata:parent="animals" msdata:child="Aviary" msdata:parentkey="animals_id" msdata:childkey="id_animal" msprop:Generator_UserParentTable="animals" msprop:Generator_UserChildTable="Aviary" msprop:Generator_RelationVarName="relationFK__Aviary__id_anima__43A1090D" msprop:Generator_ChildPropName="GetAviaryRows" msprop:Generator_UserRelationName="FK__Aviary__id_anima__43A1090D" msprop:Generator_ParentPropName="animalsRow" />
      <msdata:Relationship name="FK__Aviary__id_worke__42ACE4D4" msdata:parent="workers" msdata:child="Aviary" msdata:parentkey="workers_id" msdata:childkey="id_worker" msprop:Generator_UserParentTable="workers" msprop:Generator_UserChildTable="Aviary" msprop:Generator_RelationVarName="relationFK__Aviary__id_worke__42ACE4D4" msprop:Generator_ChildPropName="GetAviaryRows" msprop:Generator_ParentPropName="workersRow" msprop:Generator_UserRelationName="FK__Aviary__id_worke__42ACE4D4" />
      <msdata:Relationship name="FK__tiket__benefits___4B422AD5" msdata:parent="benefits" msdata:child="tiket" msdata:parentkey="id_benefits" msdata:childkey="benefits_id" msprop:Generator_UserParentTable="benefits" msprop:Generator_UserChildTable="tiket" msprop:Generator_RelationVarName="relationFK__tiket__benefits___4B422AD5" msprop:Generator_ChildPropName="GettiketRows" msprop:Generator_UserRelationName="FK__tiket__benefits___4B422AD5" msprop:Generator_ParentPropName="benefitsRow" />
      <msdata:Relationship name="FK__tiket__rate_id__4A4E069C" msdata:parent="rate" msdata:child="tiket" msdata:parentkey="id_rate" msdata:childkey="rate_id" msprop:Generator_UserParentTable="rate" msprop:Generator_UserChildTable="tiket" msprop:Generator_RelationVarName="relationFK__tiket__rate_id__4A4E069C" msprop:Generator_ChildPropName="GettiketRows" msprop:Generator_UserRelationName="FK__tiket__rate_id__4A4E069C" msprop:Generator_ParentPropName="rateRow" />
      <msdata:Relationship name="FK__till__tickets_id__4F12BBB9" msdata:parent="tiket" msdata:child="till" msdata:parentkey="id_tiket" msdata:childkey="tickets_id" msprop:Generator_UserParentTable="tiket" msprop:Generator_UserChildTable="till" msprop:Generator_RelationVarName="relationFK__till__tickets_id__4F12BBB9" msprop:Generator_ChildPropName="GettillRows" msprop:Generator_UserRelationName="FK__till__tickets_id__4F12BBB9" msprop:Generator_ParentPropName="tiketRow" />
      <msdata:Relationship name="FK__till__workers_id__4E1E9780" msdata:parent="workers" msdata:child="till" msdata:parentkey="workers_id" msdata:childkey="workers_id" msprop:Generator_UserParentTable="workers" msprop:Generator_UserChildTable="till" msprop:Generator_RelationVarName="relationFK__till__workers_id__4E1E9780" msprop:Generator_ChildPropName="GettillRows" msprop:Generator_ParentPropName="workersRow" msprop:Generator_UserRelationName="FK__till__workers_id__4E1E9780" />
      <msdata:Relationship name="FK__workers__id_post__3EDC53F0" msdata:parent="post" msdata:child="workers" msdata:parentkey="id_post" msdata:childkey="id_post" msprop:Generator_UserParentTable="post" msprop:Generator_UserChildTable="workers" msprop:Generator_RelationVarName="relationFK__workers__id_post__3EDC53F0" msprop:Generator_ChildPropName="GetworkersRows" msprop:Generator_UserRelationName="FK__workers__id_post__3EDC53F0" msprop:Generator_ParentPropName="postRow" />
      <msdata:Relationship name="FK__workers__users__3FD07829" msdata:parent="users" msdata:child="workers" msdata:parentkey="id_users" msdata:childkey="users" msprop:Generator_UserParentTable="users" msprop:Generator_UserChildTable="workers" msprop:Generator_RelationVarName="relationFK__workers__users__3FD07829" msprop:Generator_ChildPropName="GetworkersRows" msprop:Generator_UserRelationName="FK__workers__users__3FD07829" msprop:Generator_ParentPropName="usersRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>